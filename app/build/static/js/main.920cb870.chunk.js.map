{"version":3,"sources":["components/NoData/NoData.js","components/NodeDelete/NodeDelete.js","components/NodeEdit/NodeEdit.js","components/NodeItem/NodeItem.js","components/NodeList/NodeList.js","components/NodeNew/NodeNew.js","App.js","index.js"],"names":["NoData","React","Component","NodeDelete","state","confirm","deleteNode","bind","showConfirm","cancelDelete","id","this","props","setState","style","panel","margin","padding","backgroundColor","inactive","color","onClick","NodeEdit","input","title","body","patchNode","handleChange","handleSubmit","data","value","console","log","cancelEdit","event","target","e","preventDefault","styles","form","formItem","onSubmit","name","type","onChange","rows","cols","ref","defaultValue","button","NodeItem","showEdit","editNode","content","border","buttons","attributes","dangerouslySetInnerHTML","__html","NodeList","undefined","length","map","item","key","NodeNew","postNode","document","getElementById","placeholder","config","JSONAPI_ROOT","headers","Headers","App","loadNodeData","fetchJsonApiGet","fetchJsonApiPost","fetchJsonApiPatch","fetchJsonApiDelete","updateData","checkInvalidData","destination","responseData","validate","validatedData","url","options","get","fetch","then","response","text","csrfToken","append","catch","err","json","postData","fetchWithCSRFToken","method","credentials","JSON","stringify","update","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.920cb870.chunk.js","sourcesContent":["// Import React, and the custom components we use within this component.\nimport React from 'react';\n\nexport default class NoData extends React.Component {\n    render() {\n      return <div>No pages found.</div>;\n    }\n}","// Import React, and the custom components we use within this component.\nimport React from 'react';\n\n// Displays a confirmation to delete the node\nexport default class NodeDelete extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        confirm: false,\n      }\n      this.deleteNode = this.deleteNode.bind(this);\n      this.showConfirm = this.showConfirm.bind(this);\n      this.cancelDelete = this.cancelDelete.bind(this);\n    }\n\n    deleteNode(id) {\n      this.props.deleteNode(id);\n      this.cancelDelete();\n    }\n\n    showConfirm() {\n      this.setState({ confirm: true });\n    }\n\n    cancelDelete() {\n      this.setState({ confirm: false });\n    }\n\n    render() {\n      let style = {\n        panel: {\n          margin: '30px',\n          padding: '30px',\n          backgroundColor: '#EEE',\n        },\n        inactive: {\n          color: '#DDD',\n        }\n      };\n      return (\n        <div>\n          {this.state.confirm === false &&\n            <button onClick={() => this.showConfirm()}>\n              Delete\n            </button>\n          }\n          {this.state.confirm === true &&\n            <button style={style.inactive}>\n              Delete\n            </button>\n          }\n          {this.state.confirm === true &&\n            <div style={style.panel}>\n              <div>Delete this Node?</div><br />\n              <button onClick={() => this.deleteNode(this.props.id)}>Yes</button>\n              <button onClick={() => this.cancelDelete()}>No</button>\n            </div>\n          }\n        </div>\n      );\n    }\n  }","// Import React, and the custom components we use within this component.\nimport React from 'react';\n\n// Displays the form for editing a node\nexport default class NodeEdit extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {\n        input: {\n          title: props.title,\n          body: props.body,\n        },\n      };\n      this.patchNode = this.patchNode.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    patchNode() {\n      let data = {\n          \"data\": {\n            \"id\": this.props.id,\n            \"type\": \"node--article\",\n            \"attributes\": {\n              \"title\": `${this.state.input.title}`,\n              \"body\": {\n                \"value\": `${this.input.value}`,\n              }\n          }\n        }\n      };\n      console.log('NodeEdit: ',data);\n      this.props.patchNode(this.props.id, data);\n      this.props.cancelEdit();\n    }\n\n    handleChange(event, target) {\n      this.setState({input: { [target]: event.target.value}}, () => console.log(this.state));\n    }\n\n    handleSubmit(e) {\n      this.patchNode();\n      e.preventDefault();\n    }\n\n    render() {\n      let styles = {\n        form: {\n          margin: '30px'\n        },\n        formItem: {\n          margin: '10px'\n        }\n      }\n      return (\n        <form style={styles.form} onSubmit={this.handleSubmit}>\n          <input\n            name=\"title\"\n            type=\"text\"\n            value={this.state.input.title}\n            onChange={(e) => this.handleChange(e, 'title')}\n            style={styles.formItem}\n          />\n          <br />\n          <textarea\n            name=\"body\"\n            id=\"patch-body\"\n            type=\"textarea\"\n            rows=\"4\"\n            cols=\"30\"\n            ref={(input) => this.input = input}\n            defaultValue={this.state.input.body}\n            style={styles.formItem}\n          />\n\n          <br />\n          <input\n            name=\"submit\"\n            type=\"submit\"\n            value=\"Save\"\n            style={styles.button}\n          />\n        </form>\n      );\n    }\n  }","// Import React, and the custom components we use within this component.\nimport React from 'react';\n// Note that these paths are relative to the current file.\nimport NodeDelete from '../NodeDelete/NodeDelete';\nimport NodeEdit from '../NodeEdit/NodeEdit';\n\n// Displays an information about an individual node\nexport default class NodeItem extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        showEdit: false,\n      }\n      this.editNode = this.editNode.bind(this);\n      this.showEdit = this.showEdit.bind(this);\n      this.cancelEdit = this.cancelEdit.bind(this);\n    }\n\n    editNode(id) {\n      this.props.editNode(id);\n    }\n\n    showEdit(e) {\n      this.setState({ showEdit: true });\n      e.preventDefault();\n    }\n\n    cancelEdit() {\n      this.setState({ showEdit: false });\n    }\n\n    render() {\n      let style = {\n        content: {\n          margin: '30px',\n          border: '5px solid #cbcbcb',\n        },\n        buttons: {\n          margin: '30px',\n        }\n      };\n      return (\n        <div id={this.props.id}>\n          <div style={style.content}>\n            <h2>{this.props.attributes.title}</h2>\n            {this.props.attributes.body && <div dangerouslySetInnerHTML={{__html: this.props.attributes.body.value}} />}\n          </div>\n          <hr />\n          <div style={style.buttons}>\n            {this.state.showEdit === false &&\n              <div>\n                <button onClick={(e) => this.showEdit(e)}>\n                  Edit\n                </button>\n              </div>\n            }\n            {this.state.showEdit === true &&\n              <div>\n                <NodeEdit {...this.props} title={this.props.attributes.title} body={this.props.attributes.body.value} cancelEdit={this.cancelEdit} />\n                <button onClick={() => this.cancelEdit()}>\n                  View\n                </button>\n              </div>\n            }\n            <NodeDelete {...this.props} />\n          </div>\n        </div>\n      );\n    }\n  }","// Import React, and the custom components we use within this component.\nimport React from 'react';\n// Note that these paths are relative to the current file.\nimport NoData from '../NoData/NoData';\nimport NodeItem from '../NodeItem/NodeItem';\n\n// Display the content for each article node in Drupal\nexport default class NodeList extends React.Component {\n    render() {\n      let { data, patchNode, deleteNode } = this.props;\n      return (\n\n          <div>\n            {data !== null &&\n              data.data !== undefined &&\n              data.data !== null &&\n              data.data.length > 0 ?\n              data.data.map(item =>\n                <NodeItem\n                  {...item}\n                  key={`node-${item.id}`}\n                  patchNode={patchNode}\n                  deleteNode={deleteNode}\n                />)\n              :\n              <NoData />\n            }\n          </div>\n      );\n    }\n}"," // Import React, and the custom components we use within this component.\nimport React from 'react';\n\n // Displays a form for adding a new node\n export default class NodeNew extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        input: {\n          title: '',\n        },\n      };\n      this.postNode = this.postNode.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    postNode() {\n      let data = {\n        \"data\": {\n          \"type\": \"node--article\", // Not in documentation but required.\n          \"attributes\": {\n            \"title\": `${this.state.input.title}`,\n            \"body\": {\n              \"value\": `${this.input.value}`,\n              \"format\": 'plain_text',\n            }\n          }\n        }\n      };\n      console.log('NodeNew: ',data);\n      this.props.postNode(data);\n    }\n\n    handleChange(event, target) {\n      this.setState({input: { [target]: event.target.value}}, () => console.log(this.state));\n    }\n\n    handleSubmit(event) {\n      this.postNode();\n      event.preventDefault();\n      // Clear out form.\n      this.setState({input: { title: ''}});\n      document.getElementById('post-body').value = \"\";\n    }\n\n    render() {\n      let styles = {\n        form: {\n          margin: '30px'\n        },\n        formItem: {\n          margin: '10px'\n        }\n      }\n      return (\n        <form style={styles.form} onSubmit={this.handleSubmit}>\n          <h3>Add a new article</h3>\n          <input\n            name=\"title\"\n            type=\"text\"\n            value={this.state.input.title}\n            placeholder=\"Title\"\n            onChange={(e) => this.handleChange(e, 'title')}\n            style={styles.formItem}\n          />\n          <br />\n          <textarea\n            id=\"post-body\"\n            name=\"body\"\n            type=\"textarea\"\n            rows=\"4\"\n            cols=\"30\"\n            ref={(input) => this.input = input}\n            placeholder=\"Body\"\n            style={styles.formItem}\n          />\n          <br />\n          <input\n            name=\"submit\"\n            type=\"submit\"\n            value=\"Add Node\"\n            style={styles.button}\n          />\n        </form>\n      );\n    }\n  }","import React from 'react';\nimport NodeList from './components/NodeList/NodeList';\nimport NodeNew from './components/NodeNew/NodeNew';\nimport './App.css';\n\n// Create a config setting\nconst config =  {\n  base: 'https://my-drupal8-site.ddev.site',\n};\n\nconst JSONAPI_ROOT = `${config.base}/jsonapi/`;\n\n// Set the headers as a constant variable\nconst headers = new Headers({\n  'Accept': 'application/vnd.api+json',\n  'Content-Type': 'application/vnd.api+json',\n  'Cache': 'no-cache'\n});\n\n\n// Main component\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n    };\n    console.log('App');\n\n    this.loadNodeData = this.loadNodeData.bind(this);\n    this.postNode = this.postNode.bind(this);\n    this.patchNode = this.patchNode.bind(this);\n    this.deleteNode = this.deleteNode.bind(this);\n    this.fetchJsonApiGet = this.fetchJsonApiGet.bind(this);\n    this.fetchJsonApiPost = this.fetchJsonApiPost.bind(this);\n    this.fetchJsonApiPatch = this.fetchJsonApiPatch.bind(this);\n    this.fetchJsonApiDelete = this.fetchJsonApiDelete.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.checkInvalidData = this.checkInvalidData.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadNodeData();\n  }\n\n  // GET list of node content & store in this.state.data\n  loadNodeData() {\n    console.log('loadNodeData');\n    this.fetchJsonApiGet('data', `${JSONAPI_ROOT}node/article`, true);\n  }\n\n  // Update the data object in state\n  updateData(destination, responseData, validate = true) {\n    const validatedData = this.checkInvalidData(responseData, validate);\n    if (validatedData || validate === false) {\n      this.setState( { [destination]: responseData }, () => console.log('updateData: ',this.state));\n    }\n  }\n\n  // Check that the data response is in the format we expect.\n  checkInvalidData(data, validate = true) {\n    if (validate) {\n      if (data === null) {\n        return false;\n      }\n      if (data.data === undefined ||\n          data.data === null ) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n\n  // Helper function for any write/update operations\n  fetchWithCSRFToken(url, options) {\n    if (!options.headers.get('X-CSRF-Token')) {\n      return fetch(`${config.base}/session/token?_format=json`)\n        .then(response => response.text())\n        .then((csrfToken) => {\n          options.headers.append('X-CSRF-Token', csrfToken);\n          return fetch(url, options);\n        })\n        .catch(err => console.log('Unable to obtain CSRF token:', err));\n    }\n    else {\n      return fetch(url, options);\n    }\n  }\n\n  // Perform GET request\n  fetchJsonApiGet(destination, url) {\n    fetch(url)\n      .then(function(response) {\n        return response.json();\n      })\n      .then((data) => this.updateData(destination, data))\n      .catch(err => console.log('API error:', err));\n  }\n\n  // POST to create new content\n  postNode(data) {\n    console.log('postNode: ',data);\n    this.fetchJsonApiPost('post', `${JSONAPI_ROOT}node/article`, data);\n  }\n\n  fetchJsonApiPost(destination, url, postData) {\n    this.fetchWithCSRFToken(url, {\n      method: 'POST',\n      credentials: 'same-origin',\n      headers,\n      body: JSON.stringify(postData)\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then((data) => {\n      this.updateData(destination, data, false);\n      this.loadNodeData();\n    })\n    .catch(err => console.log('API error:', err));\n  }\n\n  // PATCH to update existing content\n  patchNode(id, data) {\n    if (id !== undefined &&\n        id !== null &&\n        data !== undefined &&\n        data !== null) {\n      this.fetchJsonApiPatch('patch', `${JSONAPI_ROOT}node/article/${id}`, data);\n    }\n  }\n\n  fetchJsonApiPatch(destination, url, update) {\n    this.fetchWithCSRFToken(url, {\n      method: 'PATCH',\n      credentials: 'same-origin',\n      headers,\n      body: JSON.stringify(update)\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then((data) => {\n      this.updateData(destination, data, false);\n      this.loadNodeData();\n    })\n    .catch(err => console.log('API error:', err));\n  }\n\n  // DELETE a node\n  deleteNode(id) {\n    if (id !== undefined && id !== null) {\n      this.fetchJsonApiDelete('delete', `${JSONAPI_ROOT}node/article/${id}`);\n    }\n  }\n\n  fetchJsonApiDelete(destination, url) {\n    this.fetchWithCSRFToken(url, {\n      method: 'DELETE',\n      credentials: 'same-origin',\n      headers\n    })\n    .then(function(response) {\n      // Should be 204\n      console.log(response);\n      return response;\n    })\n    .then((data) => {\n      this.fetchJsonApiGet('data', `${JSONAPI_ROOT}node/article`);\n    })\n    .catch(err => console.log('API error:', err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <hr />\n        <h2>All Articles</h2>\n        <NodeList\n          /* The components will update whenever the state data changes */\n          data={this.state.data}\n          patchNode={this.patchNode}\n          deleteNode={this.deleteNode}\n        />\n        <hr />\n        <NodeNew postNode={this.postNode} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('react-app'));"],"sourceRoot":""}
